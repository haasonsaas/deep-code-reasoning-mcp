name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run TypeScript type checking
      run: npm run typecheck
    
    - name: Run linter
      run: npm run lint
      continue-on-error: true  # Don't fail on lint errors for now
    
    - name: Run tests
      run: npm test
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        NODE_OPTIONS: --experimental-vm-modules
    
    - name: Build project
      run: npm run build

  release:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build
    
    - name: Create Release Archive
      run: |
        tar -czf deep-code-reasoning-mcp.tar.gz dist/ package.json package-lock.json README.md LICENSE
    
    - name: Upload Release Artifact
      uses: actions/upload-artifact@v4
      with:
        name: release-package
        path: deep-code-reasoning-mcp.tar.gz